// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jlHepMC3.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<HepMC3::Units> : std::false_type { };
  template<> struct DefaultConstructible<HepMC3::Units> : std::false_type { };
}

// Class generating the wrapper for type HepMC3::Units
// signature to use in the veto file: HepMC3::Units
struct JlHepMC3_Units: public Wrapper {

  JlHepMC3_Units(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type HepMC3::Units (" __HERE__ ")");
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/Units.h:26:7
    jlcxx::TypeWrapper<HepMC3::Units>  t = jlModule.add_type<HepMC3::Units>("HepMC3!Units");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<HepMC3::Units>>(new jlcxx::TypeWrapper<HepMC3::Units>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for HepMC3::Units::MomentumUnit HepMC3::Units::momentum_unit(const std::string &) (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::Units::MomentumUnit HepMC3::Units::momentum_unit(const std::string &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/Units.h:36:25
    module_.method("HepMC3!Units!momentum_unit", [](const std::string & arg0)->HepMC3::Units::MomentumUnit { return HepMC3::Units::momentum_unit(arg0); });

    DEBUG_MSG("Adding wrapper for HepMC3::Units::LengthUnit HepMC3::Units::length_unit(const std::string &) (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::Units::LengthUnit HepMC3::Units::length_unit(const std::string &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/Units.h:46:23
    module_.method("HepMC3!Units!length_unit", [](const std::string & arg0)->HepMC3::Units::LengthUnit { return HepMC3::Units::length_unit(arg0); });

    DEBUG_MSG("Adding wrapper for std::string HepMC3::Units::name(HepMC3::Units::MomentumUnit) (" __HERE__ ")");
    // signature to use in the veto list: std::string HepMC3::Units::name(HepMC3::Units::MomentumUnit)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/Units.h:56:24
    module_.method("HepMC3!Units!name", [](HepMC3::Units::MomentumUnit arg0)->std::string { return HepMC3::Units::name(arg0); });

    DEBUG_MSG("Adding wrapper for std::string HepMC3::Units::name(HepMC3::Units::LengthUnit) (" __HERE__ ")");
    // signature to use in the veto list: std::string HepMC3::Units::name(HepMC3::Units::LengthUnit)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/Units.h:68:24
    module_.method("HepMC3!Units!name", [](HepMC3::Units::LengthUnit arg0)->std::string { return HepMC3::Units::name(arg0); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<HepMC3::Units>> type_;
};
std::shared_ptr<Wrapper> newJlHepMC3_Units(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlHepMC3_Units(module));
}
