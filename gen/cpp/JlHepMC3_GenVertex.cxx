// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jlHepMC3.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<HepMC3::GenVertex> : std::false_type { };
  template<> struct DefaultConstructible<HepMC3::GenVertex> : std::false_type { };
}

// Class generating the wrapper for type HepMC3::GenVertex
// signature to use in the veto file: HepMC3::GenVertex
struct JlHepMC3_GenVertex: public Wrapper {

  JlHepMC3_GenVertex(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type HepMC3::GenVertex (" __HERE__ ")");
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:29:7
    jlcxx::TypeWrapper<HepMC3::GenVertex>  t = jlModule.add_type<HepMC3::GenVertex>("HepMC3!GenVertex");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<HepMC3::GenVertex>>(new jlcxx::TypeWrapper<HepMC3::GenVertex>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void HepMC3::GenVertex::GenVertex(const HepMC3::FourVector &) (" __HERE__ ")");
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:39:5
    t.constructor<const HepMC3::FourVector &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void HepMC3::GenVertex::GenVertex(const HepMC3::GenVertexData &) (" __HERE__ ")");
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:42:5
    t.constructor<const HepMC3::GenVertexData &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for HepMC3::GenEvent * HepMC3::GenVertex::parent_event() (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::GenEvent * HepMC3::GenVertex::parent_event()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:56:15
    t.method("parent_event", [](HepMC3::GenVertex& a)->HepMC3::GenEvent * { return a.parent_event(); });
    t.method("parent_event", [](HepMC3::GenVertex* a)->HepMC3::GenEvent * { return a->parent_event(); });

    DEBUG_MSG("Adding wrapper for const HepMC3::GenEvent * HepMC3::GenVertex::parent_event() (" __HERE__ ")");
    // signature to use in the veto list: const HepMC3::GenEvent * HepMC3::GenVertex::parent_event()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:59:21
    t.method("parent_event", [](HepMC3::GenVertex const& a)->const HepMC3::GenEvent * { return a.parent_event(); });
    t.method("parent_event", [](HepMC3::GenVertex const* a)->const HepMC3::GenEvent * { return a->parent_event(); });

    DEBUG_MSG("Adding wrapper for bool HepMC3::GenVertex::in_event() (" __HERE__ ")");
    // signature to use in the veto list: bool HepMC3::GenVertex::in_event()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:62:10
    t.method("in_event", [](HepMC3::GenVertex const& a)->bool { return a.in_event(); });
    t.method("in_event", [](HepMC3::GenVertex const* a)->bool { return a->in_event(); });

    DEBUG_MSG("Adding wrapper for int HepMC3::GenVertex::id() (" __HERE__ ")");
    // signature to use in the veto list: int HepMC3::GenVertex::id()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:67:9
    t.method("id", [](HepMC3::GenVertex const& a)->int { return a.id(); });
    t.method("id", [](HepMC3::GenVertex const* a)->int { return a->id(); });

    DEBUG_MSG("Adding wrapper for int HepMC3::GenVertex::status() (" __HERE__ ")");
    // signature to use in the veto list: int HepMC3::GenVertex::status()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:70:9
    t.method("status", [](HepMC3::GenVertex const& a)->int { return a.status(); });
    t.method("status", [](HepMC3::GenVertex const* a)->int { return a->status(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenVertex::set_status(int) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenVertex::set_status(int)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:72:10
    t.method("set_status", [](HepMC3::GenVertex& a, int arg0)->void { a.set_status(arg0); });
    t.method("set_status", [](HepMC3::GenVertex* a, int arg0)->void { a->set_status(arg0); });

    DEBUG_MSG("Adding wrapper for const HepMC3::GenVertexData & HepMC3::GenVertex::data() (" __HERE__ ")");
    // signature to use in the veto list: const HepMC3::GenVertexData & HepMC3::GenVertex::data()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:75:26
    t.method("data", [](HepMC3::GenVertex const& a)->const HepMC3::GenVertexData & { return a.data(); });
    t.method("data", [](HepMC3::GenVertex const* a)->const HepMC3::GenVertexData & { return a->data(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenVertex::add_particle_in(HepMC3::GenParticlePtr) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenVertex::add_particle_in(HepMC3::GenParticlePtr)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:78:10
    t.method("add_particle_in", [](HepMC3::GenVertex& a, HepMC3::GenParticlePtr arg0)->void { a.add_particle_in(arg0); });
    t.method("add_particle_in", [](HepMC3::GenVertex* a, HepMC3::GenParticlePtr arg0)->void { a->add_particle_in(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenVertex::add_particle_out(HepMC3::GenParticlePtr) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenVertex::add_particle_out(HepMC3::GenParticlePtr)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:80:10
    t.method("add_particle_out", [](HepMC3::GenVertex& a, HepMC3::GenParticlePtr arg0)->void { a.add_particle_out(arg0); });
    t.method("add_particle_out", [](HepMC3::GenVertex* a, HepMC3::GenParticlePtr arg0)->void { a->add_particle_out(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenVertex::remove_particle_in(HepMC3::GenParticlePtr) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenVertex::remove_particle_in(HepMC3::GenParticlePtr)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:82:10
    t.method("remove_particle_in", [](HepMC3::GenVertex& a, HepMC3::GenParticlePtr arg0)->void { a.remove_particle_in(arg0); });
    t.method("remove_particle_in", [](HepMC3::GenVertex* a, HepMC3::GenParticlePtr arg0)->void { a->remove_particle_in(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenVertex::remove_particle_out(HepMC3::GenParticlePtr) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenVertex::remove_particle_out(HepMC3::GenParticlePtr)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:84:10
    t.method("remove_particle_out", [](HepMC3::GenVertex& a, HepMC3::GenParticlePtr arg0)->void { a.remove_particle_out(arg0); });
    t.method("remove_particle_out", [](HepMC3::GenVertex* a, HepMC3::GenParticlePtr arg0)->void { a->remove_particle_out(arg0); });

    DEBUG_MSG("Adding wrapper for int HepMC3::GenVertex::particles_in_size() (" __HERE__ ")");
    // signature to use in the veto list: int HepMC3::GenVertex::particles_in_size()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:87:16
    t.method("particles_in_size", [](HepMC3::GenVertex const& a)->int { return a.particles_in_size(); });
    t.method("particles_in_size", [](HepMC3::GenVertex const* a)->int { return a->particles_in_size(); });

    DEBUG_MSG("Adding wrapper for int HepMC3::GenVertex::particles_out_size() (" __HERE__ ")");
    // signature to use in the veto list: int HepMC3::GenVertex::particles_out_size()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:89:16
    t.method("particles_out_size", [](HepMC3::GenVertex const& a)->int { return a.particles_out_size(); });
    t.method("particles_out_size", [](HepMC3::GenVertex const* a)->int { return a->particles_out_size(); });

    DEBUG_MSG("Adding wrapper for const std::vector<HepMC3::GenParticlePtr> & HepMC3::GenVertex::particles_in() (" __HERE__ ")");
    // signature to use in the veto list: const std::vector<HepMC3::GenParticlePtr> & HepMC3::GenVertex::particles_in()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:93:40
    t.method("particles_in", [](HepMC3::GenVertex& a)->const std::vector<HepMC3::GenParticlePtr> & { return a.particles_in(); });
    t.method("particles_in", [](HepMC3::GenVertex* a)->const std::vector<HepMC3::GenParticlePtr> & { return a->particles_in(); });

    DEBUG_MSG("Adding wrapper for const std::vector<HepMC3::GenParticlePtr> & HepMC3::GenVertex::particles_out() (" __HERE__ ")");
    // signature to use in the veto list: const std::vector<HepMC3::GenParticlePtr> & HepMC3::GenVertex::particles_out()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:97:40
    t.method("particles_out", [](HepMC3::GenVertex& a)->const std::vector<HepMC3::GenParticlePtr> & { return a.particles_out(); });
    t.method("particles_out", [](HepMC3::GenVertex* a)->const std::vector<HepMC3::GenParticlePtr> & { return a->particles_out(); });

    DEBUG_MSG("Adding wrapper for const HepMC3::FourVector & HepMC3::GenVertex::position() (" __HERE__ ")");
    // signature to use in the veto list: const HepMC3::FourVector & HepMC3::GenVertex::position()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:107:23
    t.method("position", [](HepMC3::GenVertex const& a)->const HepMC3::FourVector & { return a.position(); });
    t.method("position", [](HepMC3::GenVertex const* a)->const HepMC3::FourVector & { return a->position(); });

    DEBUG_MSG("Adding wrapper for bool HepMC3::GenVertex::has_set_position() (" __HERE__ ")");
    // signature to use in the veto list: bool HepMC3::GenVertex::has_set_position()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:109:10
    t.method("has_set_position", [](HepMC3::GenVertex const& a)->bool { return a.has_set_position(); });
    t.method("has_set_position", [](HepMC3::GenVertex const* a)->bool { return a->has_set_position(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenVertex::set_position(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenVertex::set_position(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:112:10
    t.method("set_position", [](HepMC3::GenVertex& a, const HepMC3::FourVector & arg0)->void { a.set_position(arg0); });
    t.method("set_position", [](HepMC3::GenVertex* a, const HepMC3::FourVector & arg0)->void { a->set_position(arg0); });

    DEBUG_MSG("Adding wrapper for bool HepMC3::GenVertex::add_attribute(const std::string &, std::shared_ptr<HepMC3::Attribute>) (" __HERE__ ")");
    // signature to use in the veto list: bool HepMC3::GenVertex::add_attribute(const std::string &, std::shared_ptr<HepMC3::Attribute>)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:119:10
    t.method("add_attribute", [](HepMC3::GenVertex& a, const std::string & arg0, std::shared_ptr<HepMC3::Attribute> arg1)->bool { return a.add_attribute(arg0, arg1); });
    t.method("add_attribute", [](HepMC3::GenVertex* a, const std::string & arg0, std::shared_ptr<HepMC3::Attribute> arg1)->bool { return a->add_attribute(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for std::vector<std::string> HepMC3::GenVertex::attribute_names() (" __HERE__ ")");
    // signature to use in the veto list: std::vector<std::string> HepMC3::GenVertex::attribute_names()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:122:30
    t.method("attribute_names", [](HepMC3::GenVertex const& a)->std::vector<std::string> { return a.attribute_names(); });
    t.method("attribute_names", [](HepMC3::GenVertex const* a)->std::vector<std::string> { return a->attribute_names(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenVertex::remove_attribute(const std::string &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenVertex::remove_attribute(const std::string &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:125:10
    t.method("remove_attribute", [](HepMC3::GenVertex& a, const std::string & arg0)->void { a.remove_attribute(arg0); });
    t.method("remove_attribute", [](HepMC3::GenVertex* a, const std::string & arg0)->void { a->remove_attribute(arg0); });

    DEBUG_MSG("Adding wrapper for std::string HepMC3::GenVertex::attribute_as_string(const std::string &) (" __HERE__ ")");
    // signature to use in the veto list: std::string HepMC3::GenVertex::attribute_as_string(const std::string &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenVertex.h:132:17
    t.method("attribute_as_string", [](HepMC3::GenVertex const& a, const std::string & arg0)->std::string { return a.attribute_as_string(arg0); });
    t.method("attribute_as_string", [](HepMC3::GenVertex const* a, const std::string & arg0)->std::string { return a->attribute_as_string(arg0); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<HepMC3::GenVertex>> type_;
};
std::shared_ptr<Wrapper> newJlHepMC3_GenVertex(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlHepMC3_GenVertex(module));
}
