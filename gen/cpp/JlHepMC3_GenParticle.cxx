// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jlHepMC3.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<HepMC3::GenParticle> : std::false_type { };
  template<> struct DefaultConstructible<HepMC3::GenParticle> : std::false_type { };
}

// Class generating the wrapper for type HepMC3::GenParticle
// signature to use in the veto file: HepMC3::GenParticle
struct JlHepMC3_GenParticle: public Wrapper {

  JlHepMC3_GenParticle(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type HepMC3::GenParticle (" __HERE__ ")");
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:34:7
    jlcxx::TypeWrapper<HepMC3::GenParticle>  t = jlModule.add_type<HepMC3::GenParticle>("HepMC3!GenParticle");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<HepMC3::GenParticle>>(new jlcxx::TypeWrapper<HepMC3::GenParticle>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void HepMC3::GenParticle::GenParticle(const HepMC3::FourVector &, int, int) (" __HERE__ ")");
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:45:5
    t.constructor<const HepMC3::FourVector &>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const HepMC3::FourVector &, int>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const HepMC3::FourVector &, int, int>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void HepMC3::GenParticle::GenParticle(const HepMC3::GenParticleData &) (" __HERE__ ")");
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:48:5
    t.constructor<const HepMC3::GenParticleData &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for bool HepMC3::GenParticle::in_event() (" __HERE__ ")");
    // signature to use in the veto list: bool HepMC3::GenParticle::in_event()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:60:10
    t.method("in_event", [](HepMC3::GenParticle const& a)->bool { return a.in_event(); });
    t.method("in_event", [](HepMC3::GenParticle const* a)->bool { return a->in_event(); });

    DEBUG_MSG("Adding wrapper for HepMC3::GenEvent * HepMC3::GenParticle::parent_event() (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::GenEvent * HepMC3::GenParticle::parent_event()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:63:15
    t.method("parent_event", [](HepMC3::GenParticle& a)->HepMC3::GenEvent * { return a.parent_event(); });
    t.method("parent_event", [](HepMC3::GenParticle* a)->HepMC3::GenEvent * { return a->parent_event(); });

    DEBUG_MSG("Adding wrapper for const HepMC3::GenEvent * HepMC3::GenParticle::parent_event() (" __HERE__ ")");
    // signature to use in the veto list: const HepMC3::GenEvent * HepMC3::GenParticle::parent_event()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:65:21
    t.method("parent_event", [](HepMC3::GenParticle const& a)->const HepMC3::GenEvent * { return a.parent_event(); });
    t.method("parent_event", [](HepMC3::GenParticle const* a)->const HepMC3::GenEvent * { return a->parent_event(); });

    DEBUG_MSG("Adding wrapper for int HepMC3::GenParticle::id() (" __HERE__ ")");
    // signature to use in the veto list: int HepMC3::GenParticle::id()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:68:9
    t.method("id", [](HepMC3::GenParticle const& a)->int { return a.id(); });
    t.method("id", [](HepMC3::GenParticle const* a)->int { return a->id(); });

    DEBUG_MSG("Adding wrapper for const HepMC3::GenParticleData & HepMC3::GenParticle::data() (" __HERE__ ")");
    // signature to use in the veto list: const HepMC3::GenParticleData & HepMC3::GenParticle::data()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:70:28
    t.method("data", [](HepMC3::GenParticle const& a)->const HepMC3::GenParticleData & { return a.data(); });
    t.method("data", [](HepMC3::GenParticle const* a)->const HepMC3::GenParticleData & { return a->data(); });

    DEBUG_MSG("Adding wrapper for int HepMC3::GenParticle::pid() (" __HERE__ ")");
    // signature to use in the veto list: int HepMC3::GenParticle::pid()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:94:11
    t.method("pid", [](HepMC3::GenParticle const& a)->int { return a.pid(); });
    t.method("pid", [](HepMC3::GenParticle const* a)->int { return a->pid(); });

    DEBUG_MSG("Adding wrapper for int HepMC3::GenParticle::abs_pid() (" __HERE__ ")");
    // signature to use in the veto list: int HepMC3::GenParticle::abs_pid()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:95:11
    t.method("abs_pid", [](HepMC3::GenParticle const& a)->int { return a.abs_pid(); });
    t.method("abs_pid", [](HepMC3::GenParticle const* a)->int { return a->abs_pid(); });

    DEBUG_MSG("Adding wrapper for int HepMC3::GenParticle::status() (" __HERE__ ")");
    // signature to use in the veto list: int HepMC3::GenParticle::status()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:96:11
    t.method("status", [](HepMC3::GenParticle const& a)->int { return a.status(); });
    t.method("status", [](HepMC3::GenParticle const* a)->int { return a->status(); });

    DEBUG_MSG("Adding wrapper for const HepMC3::FourVector & HepMC3::GenParticle::momentum() (" __HERE__ ")");
    // signature to use in the veto list: const HepMC3::FourVector & HepMC3::GenParticle::momentum()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:97:23
    t.method("momentum", [](HepMC3::GenParticle const& a)->const HepMC3::FourVector & { return a.momentum(); });
    t.method("momentum", [](HepMC3::GenParticle const* a)->const HepMC3::FourVector & { return a->momentum(); });

    DEBUG_MSG("Adding wrapper for bool HepMC3::GenParticle::is_generated_mass_set() (" __HERE__ ")");
    // signature to use in the veto list: bool HepMC3::GenParticle::is_generated_mass_set()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:98:11
    t.method("is_generated_mass_set", [](HepMC3::GenParticle const& a)->bool { return a.is_generated_mass_set(); });
    t.method("is_generated_mass_set", [](HepMC3::GenParticle const* a)->bool { return a->is_generated_mass_set(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::GenParticle::generated_mass() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::GenParticle::generated_mass()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:104:12
    t.method("generated_mass", [](HepMC3::GenParticle const& a)->double { return a.generated_mass(); });
    t.method("generated_mass", [](HepMC3::GenParticle const* a)->double { return a->generated_mass(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenParticle::set_pid(int) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenParticle::set_pid(int)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:107:10
    t.method("set_pid", [](HepMC3::GenParticle& a, int arg0)->void { a.set_pid(arg0); });
    t.method("set_pid", [](HepMC3::GenParticle* a, int arg0)->void { a->set_pid(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenParticle::set_status(int) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenParticle::set_status(int)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:108:10
    t.method("set_status", [](HepMC3::GenParticle& a, int arg0)->void { a.set_status(arg0); });
    t.method("set_status", [](HepMC3::GenParticle* a, int arg0)->void { a->set_status(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenParticle::set_momentum(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenParticle::set_momentum(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:109:10
    t.method("set_momentum", [](HepMC3::GenParticle& a, const HepMC3::FourVector & arg0)->void { a.set_momentum(arg0); });
    t.method("set_momentum", [](HepMC3::GenParticle* a, const HepMC3::FourVector & arg0)->void { a->set_momentum(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenParticle::set_generated_mass(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenParticle::set_generated_mass(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:110:10
    t.method("set_generated_mass", [](HepMC3::GenParticle& a, double arg0)->void { a.set_generated_mass(arg0); });
    t.method("set_generated_mass", [](HepMC3::GenParticle* a, double arg0)->void { a->set_generated_mass(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenParticle::unset_generated_mass() (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenParticle::unset_generated_mass()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:111:10
    t.method("unset_generated_mass", [](HepMC3::GenParticle& a)->void { a.unset_generated_mass(); });
    t.method("unset_generated_mass", [](HepMC3::GenParticle* a)->void { a->unset_generated_mass(); });

    DEBUG_MSG("Adding wrapper for bool HepMC3::GenParticle::add_attribute(const std::string &, std::shared_ptr<HepMC3::Attribute>) (" __HERE__ ")");
    // signature to use in the veto list: bool HepMC3::GenParticle::add_attribute(const std::string &, std::shared_ptr<HepMC3::Attribute>)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:118:10
    t.method("add_attribute", [](HepMC3::GenParticle& a, const std::string & arg0, std::shared_ptr<HepMC3::Attribute> arg1)->bool { return a.add_attribute(arg0, arg1); });
    t.method("add_attribute", [](HepMC3::GenParticle* a, const std::string & arg0, std::shared_ptr<HepMC3::Attribute> arg1)->bool { return a->add_attribute(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for std::vector<std::string> HepMC3::GenParticle::attribute_names() (" __HERE__ ")");
    // signature to use in the veto list: std::vector<std::string> HepMC3::GenParticle::attribute_names()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:121:30
    t.method("attribute_names", [](HepMC3::GenParticle const& a)->std::vector<std::string> { return a.attribute_names(); });
    t.method("attribute_names", [](HepMC3::GenParticle const* a)->std::vector<std::string> { return a->attribute_names(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenParticle::remove_attribute(const std::string &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenParticle::remove_attribute(const std::string &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:124:10
    t.method("remove_attribute", [](HepMC3::GenParticle& a, const std::string & arg0)->void { a.remove_attribute(arg0); });
    t.method("remove_attribute", [](HepMC3::GenParticle* a, const std::string & arg0)->void { a->remove_attribute(arg0); });

    DEBUG_MSG("Adding wrapper for std::string HepMC3::GenParticle::attribute_as_string(const std::string &) (" __HERE__ ")");
    // signature to use in the veto list: std::string HepMC3::GenParticle::attribute_as_string(const std::string &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:131:17
    t.method("attribute_as_string", [](HepMC3::GenParticle const& a, const std::string & arg0)->std::string { return a.attribute_as_string(arg0); });
    t.method("attribute_as_string", [](HepMC3::GenParticle const* a, const std::string & arg0)->std::string { return a->attribute_as_string(arg0); });

    DEBUG_MSG("Adding wrapper for int HepMC3::GenParticle::pdg_id() (" __HERE__ ")");
    // signature to use in the veto list: int HepMC3::GenParticle::pdg_id()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:139:9
    t.method("pdg_id", [](HepMC3::GenParticle const& a)->int { return a.pdg_id(); });
    t.method("pdg_id", [](HepMC3::GenParticle const* a)->int { return a->pdg_id(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenParticle::set_pdg_id(const int &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenParticle::set_pdg_id(const int &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenParticle.h:143:10
    t.method("set_pdg_id", [](HepMC3::GenParticle& a, const int & arg0)->void { a.set_pdg_id(arg0); });
    t.method("set_pdg_id", [](HepMC3::GenParticle* a, const int & arg0)->void { a->set_pdg_id(arg0); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<HepMC3::GenParticle>> type_;
};
std::shared_ptr<Wrapper> newJlHepMC3_GenParticle(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlHepMC3_GenParticle(module));
}
