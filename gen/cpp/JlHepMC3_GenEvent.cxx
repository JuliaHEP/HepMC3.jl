// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jlHepMC3.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<HepMC3::GenEvent> : std::false_type { };
  template<> struct DefaultConstructible<HepMC3::GenEvent> : std::false_type { };
}

// Class generating the wrapper for type HepMC3::GenEvent
// signature to use in the veto file: HepMC3::GenEvent
struct JlHepMC3_GenEvent: public Wrapper {

  JlHepMC3_GenEvent(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type HepMC3::GenEvent (" __HERE__ ")");
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:47:7
    jlcxx::TypeWrapper<HepMC3::GenEvent>  t = jlModule.add_type<HepMC3::GenEvent>("HepMC3!GenEvent");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<HepMC3::GenEvent>>(new jlcxx::TypeWrapper<HepMC3::GenEvent>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::GenEvent(HepMC3::Units::MomentumUnit, HepMC3::Units::LengthUnit) (" __HERE__ ")");
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:52:5
    t.constructor<HepMC3::Units::MomentumUnit>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<HepMC3::Units::MomentumUnit, HepMC3::Units::LengthUnit>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::GenEvent(std::shared_ptr<HepMC3::GenRunInfo>, HepMC3::Units::MomentumUnit, HepMC3::Units::LengthUnit) (" __HERE__ ")");
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:58:5
    t.constructor<std::shared_ptr<HepMC3::GenRunInfo>>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<std::shared_ptr<HepMC3::GenRunInfo>, HepMC3::Units::MomentumUnit>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<std::shared_ptr<HepMC3::GenRunInfo>, HepMC3::Units::MomentumUnit, HepMC3::Units::LengthUnit>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::GenEvent(const HepMC3::GenEvent &) (" __HERE__ ")");
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:63:5
    t.constructor<const HepMC3::GenEvent &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for HepMC3::GenEvent & HepMC3::GenEvent::operator=(const HepMC3::GenEvent &) (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::GenEvent & HepMC3::GenEvent::operator=(const HepMC3::GenEvent &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:69:15
    t.method("assign", [](HepMC3::GenEvent& a, const HepMC3::GenEvent & arg0)->HepMC3::GenEvent & { return a.operator=(arg0); });
    t.method("assign", [](HepMC3::GenEvent* a, const HepMC3::GenEvent & arg0)->HepMC3::GenEvent & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for const std::vector<HepMC3::GenParticlePtr> & HepMC3::GenEvent::particles() (" __HERE__ ")");
    // signature to use in the veto list: const std::vector<HepMC3::GenParticlePtr> & HepMC3::GenEvent::particles()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:80:40
    t.method("particles", [](HepMC3::GenEvent& a)->const std::vector<HepMC3::GenParticlePtr> & { return a.particles(); });
    t.method("particles", [](HepMC3::GenEvent* a)->const std::vector<HepMC3::GenParticlePtr> & { return a->particles(); });

    DEBUG_MSG("Adding wrapper for const std::vector<HepMC3::GenVertexPtr> & HepMC3::GenEvent::vertices() (" __HERE__ ")");
    // signature to use in the veto list: const std::vector<HepMC3::GenVertexPtr> & HepMC3::GenEvent::vertices()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:82:38
    t.method("vertices", [](HepMC3::GenEvent& a)->const std::vector<HepMC3::GenVertexPtr> & { return a.vertices(); });
    t.method("vertices", [](HepMC3::GenEvent* a)->const std::vector<HepMC3::GenVertexPtr> & { return a->vertices(); });

    DEBUG_MSG("Adding wrapper for int HepMC3::GenEvent::particles_size() (" __HERE__ ")");
    // signature to use in the veto list: int HepMC3::GenEvent::particles_size()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:91:16
    t.method("particles_size", [](HepMC3::GenEvent const& a)->int { return a.particles_size(); });
    t.method("particles_size", [](HepMC3::GenEvent const* a)->int { return a->particles_size(); });

    DEBUG_MSG("Adding wrapper for bool HepMC3::GenEvent::particles_empty() (" __HERE__ ")");
    // signature to use in the veto list: bool HepMC3::GenEvent::particles_empty()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:93:17
    t.method("particles_empty", [](HepMC3::GenEvent const& a)->bool { return a.particles_empty(); });
    t.method("particles_empty", [](HepMC3::GenEvent const* a)->bool { return a->particles_empty(); });

    DEBUG_MSG("Adding wrapper for int HepMC3::GenEvent::vertices_size() (" __HERE__ ")");
    // signature to use in the veto list: int HepMC3::GenEvent::vertices_size()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:95:16
    t.method("vertices_size", [](HepMC3::GenEvent const& a)->int { return a.vertices_size(); });
    t.method("vertices_size", [](HepMC3::GenEvent const* a)->int { return a->vertices_size(); });

    DEBUG_MSG("Adding wrapper for bool HepMC3::GenEvent::vertices_empty() (" __HERE__ ")");
    // signature to use in the veto list: bool HepMC3::GenEvent::vertices_empty()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:97:17
    t.method("vertices_empty", [](HepMC3::GenEvent const& a)->bool { return a.vertices_empty(); });
    t.method("vertices_empty", [](HepMC3::GenEvent const* a)->bool { return a->vertices_empty(); });

    DEBUG_MSG("Adding wrapper for const std::vector<double> & HepMC3::GenEvent::weights() (" __HERE__ ")");
    // signature to use in the veto list: const std::vector<double> & HepMC3::GenEvent::weights()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:105:32
    t.method("weights", [](HepMC3::GenEvent const& a)->const std::vector<double> & { return a.weights(); });
    t.method("weights", [](HepMC3::GenEvent const* a)->const std::vector<double> & { return a->weights(); });

    DEBUG_MSG("Adding wrapper for std::vector<double> & HepMC3::GenEvent::weights() (" __HERE__ ")");
    // signature to use in the veto list: std::vector<double> & HepMC3::GenEvent::weights()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:107:26
    t.method("weights", [](HepMC3::GenEvent& a)->std::vector<double> & { return a.weights(); });
    t.method("weights", [](HepMC3::GenEvent* a)->std::vector<double> & { return a->weights(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::GenEvent::weight(const unsigned long &) (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::GenEvent::weight(const unsigned long &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:110:12
    t.method("weight", [](HepMC3::GenEvent const& a)->double { return a.weight(); });
    t.method("weight", [](HepMC3::GenEvent const& a, const unsigned long & arg0)->double { return a.weight(arg0); });
    t.method("weight", [](HepMC3::GenEvent const* a)->double { return a->weight(); });
    t.method("weight", [](HepMC3::GenEvent const* a, const unsigned long & arg0)->double { return a->weight(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::GenEvent::weight(const std::string &) (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::GenEvent::weight(const std::string &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:114:12
    t.method("weight", [](HepMC3::GenEvent const& a, const std::string & arg0)->double { return a.weight(arg0); });
    t.method("weight", [](HepMC3::GenEvent const* a, const std::string & arg0)->double { return a->weight(arg0); });

    DEBUG_MSG("Adding wrapper for double & HepMC3::GenEvent::weight(const std::string &) (" __HERE__ ")");
    // signature to use in the veto list: double & HepMC3::GenEvent::weight(const std::string &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:121:13
    t.method("weight", [](HepMC3::GenEvent& a, const std::string & arg0)->double & { return a.weight(arg0); });
    t.method("weight", [](HepMC3::GenEvent* a, const std::string & arg0)->double & { return a->weight(arg0); });

    DEBUG_MSG("Adding wrapper for const std::vector<std::string> & HepMC3::GenEvent::weight_names() (" __HERE__ ")");
    // signature to use in the veto list: const std::vector<std::string> & HepMC3::GenEvent::weight_names()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:130:37
    t.method("weight_names", [](HepMC3::GenEvent const& a)->const std::vector<std::string> & { return a.weight_names(); });
    t.method("weight_names", [](HepMC3::GenEvent const* a)->const std::vector<std::string> & { return a->weight_names(); });

    DEBUG_MSG("Adding wrapper for std::shared_ptr<HepMC3::GenRunInfo> HepMC3::GenEvent::run_info() (" __HERE__ ")");
    // signature to use in the veto list: std::shared_ptr<HepMC3::GenRunInfo> HepMC3::GenEvent::run_info()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:144:33
    t.method("run_info", [](HepMC3::GenEvent const& a)->std::shared_ptr<HepMC3::GenRunInfo> { return a.run_info(); });
    t.method("run_info", [](HepMC3::GenEvent const* a)->std::shared_ptr<HepMC3::GenRunInfo> { return a->run_info(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::set_run_info(std::shared_ptr<HepMC3::GenRunInfo>) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::set_run_info(std::shared_ptr<HepMC3::GenRunInfo>)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:148:10
    t.method("set_run_info", [](HepMC3::GenEvent& a, std::shared_ptr<HepMC3::GenRunInfo> arg0)->void { a.set_run_info(arg0); });
    t.method("set_run_info", [](HepMC3::GenEvent* a, std::shared_ptr<HepMC3::GenRunInfo> arg0)->void { a->set_run_info(arg0); });

    DEBUG_MSG("Adding wrapper for int HepMC3::GenEvent::event_number() (" __HERE__ ")");
    // signature to use in the veto list: int HepMC3::GenEvent::event_number()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:155:10
    t.method("event_number", [](HepMC3::GenEvent const& a)->int { return a.event_number(); });
    t.method("event_number", [](HepMC3::GenEvent const* a)->int { return a->event_number(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::set_event_number(const int &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::set_event_number(const int &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:157:10
    t.method("set_event_number", [](HepMC3::GenEvent& a, const int & arg0)->void { a.set_event_number(arg0); });
    t.method("set_event_number", [](HepMC3::GenEvent* a, const int & arg0)->void { a->set_event_number(arg0); });

    DEBUG_MSG("Adding wrapper for const HepMC3::Units::MomentumUnit & HepMC3::GenEvent::momentum_unit() (" __HERE__ ")");
    // signature to use in the veto list: const HepMC3::Units::MomentumUnit & HepMC3::GenEvent::momentum_unit()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:160:32
    t.method("momentum_unit", [](HepMC3::GenEvent const& a)->const HepMC3::Units::MomentumUnit & { return a.momentum_unit(); });
    t.method("momentum_unit", [](HepMC3::GenEvent const* a)->const HepMC3::Units::MomentumUnit & { return a->momentum_unit(); });

    DEBUG_MSG("Adding wrapper for const HepMC3::Units::LengthUnit & HepMC3::GenEvent::length_unit() (" __HERE__ ")");
    // signature to use in the veto list: const HepMC3::Units::LengthUnit & HepMC3::GenEvent::length_unit()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:162:30
    t.method("length_unit", [](HepMC3::GenEvent const& a)->const HepMC3::Units::LengthUnit & { return a.length_unit(); });
    t.method("length_unit", [](HepMC3::GenEvent const* a)->const HepMC3::Units::LengthUnit & { return a->length_unit(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::set_units(HepMC3::Units::MomentumUnit, HepMC3::Units::LengthUnit) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::set_units(HepMC3::Units::MomentumUnit, HepMC3::Units::LengthUnit)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:165:10
    t.method("set_units", [](HepMC3::GenEvent& a, HepMC3::Units::MomentumUnit arg0, HepMC3::Units::LengthUnit arg1)->void { a.set_units(arg0, arg1); });
    t.method("set_units", [](HepMC3::GenEvent* a, HepMC3::Units::MomentumUnit arg0, HepMC3::Units::LengthUnit arg1)->void { a->set_units(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for HepMC3::GenHeavyIonPtr HepMC3::GenEvent::heavy_ion() (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::GenHeavyIonPtr HepMC3::GenEvent::heavy_ion()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:168:20
    t.method("heavy_ion", [](HepMC3::GenEvent& a)->HepMC3::GenHeavyIonPtr { return a.heavy_ion(); });
    t.method("heavy_ion", [](HepMC3::GenEvent* a)->HepMC3::GenHeavyIonPtr { return a->heavy_ion(); });

    DEBUG_MSG("Adding wrapper for HepMC3::ConstGenHeavyIonPtr HepMC3::GenEvent::heavy_ion() (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::ConstGenHeavyIonPtr HepMC3::GenEvent::heavy_ion()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:170:25
    t.method("heavy_ion", [](HepMC3::GenEvent const& a)->HepMC3::ConstGenHeavyIonPtr { return a.heavy_ion(); });
    t.method("heavy_ion", [](HepMC3::GenEvent const* a)->HepMC3::ConstGenHeavyIonPtr { return a->heavy_ion(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::set_heavy_ion(HepMC3::GenHeavyIonPtr) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::set_heavy_ion(HepMC3::GenHeavyIonPtr)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:172:10
    t.method("set_heavy_ion", [](HepMC3::GenEvent& a, HepMC3::GenHeavyIonPtr arg0)->void { a.set_heavy_ion(arg0); });
    t.method("set_heavy_ion", [](HepMC3::GenEvent* a, HepMC3::GenHeavyIonPtr arg0)->void { a->set_heavy_ion(arg0); });

    DEBUG_MSG("Adding wrapper for HepMC3::GenPdfInfoPtr HepMC3::GenEvent::pdf_info() (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::GenPdfInfoPtr HepMC3::GenEvent::pdf_info()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:175:19
    t.method("pdf_info", [](HepMC3::GenEvent& a)->HepMC3::GenPdfInfoPtr { return a.pdf_info(); });
    t.method("pdf_info", [](HepMC3::GenEvent* a)->HepMC3::GenPdfInfoPtr { return a->pdf_info(); });

    DEBUG_MSG("Adding wrapper for HepMC3::ConstGenPdfInfoPtr HepMC3::GenEvent::pdf_info() (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::ConstGenPdfInfoPtr HepMC3::GenEvent::pdf_info()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:177:24
    t.method("pdf_info", [](HepMC3::GenEvent const& a)->HepMC3::ConstGenPdfInfoPtr { return a.pdf_info(); });
    t.method("pdf_info", [](HepMC3::GenEvent const* a)->HepMC3::ConstGenPdfInfoPtr { return a->pdf_info(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::set_pdf_info(HepMC3::GenPdfInfoPtr) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::set_pdf_info(HepMC3::GenPdfInfoPtr)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:179:10
    t.method("set_pdf_info", [](HepMC3::GenEvent& a, HepMC3::GenPdfInfoPtr arg0)->void { a.set_pdf_info(arg0); });
    t.method("set_pdf_info", [](HepMC3::GenEvent* a, HepMC3::GenPdfInfoPtr arg0)->void { a->set_pdf_info(arg0); });

    DEBUG_MSG("Adding wrapper for HepMC3::GenCrossSectionPtr HepMC3::GenEvent::cross_section() (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::GenCrossSectionPtr HepMC3::GenEvent::cross_section()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:182:24
    t.method("cross_section", [](HepMC3::GenEvent& a)->HepMC3::GenCrossSectionPtr { return a.cross_section(); });
    t.method("cross_section", [](HepMC3::GenEvent* a)->HepMC3::GenCrossSectionPtr { return a->cross_section(); });

    DEBUG_MSG("Adding wrapper for HepMC3::ConstGenCrossSectionPtr HepMC3::GenEvent::cross_section() (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::ConstGenCrossSectionPtr HepMC3::GenEvent::cross_section()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:184:29
    t.method("cross_section", [](HepMC3::GenEvent const& a)->HepMC3::ConstGenCrossSectionPtr { return a.cross_section(); });
    t.method("cross_section", [](HepMC3::GenEvent const* a)->HepMC3::ConstGenCrossSectionPtr { return a->cross_section(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::set_cross_section(HepMC3::GenCrossSectionPtr) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::set_cross_section(HepMC3::GenCrossSectionPtr)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:186:10
    t.method("set_cross_section", [](HepMC3::GenEvent& a, HepMC3::GenCrossSectionPtr arg0)->void { a.set_cross_section(arg0); });
    t.method("set_cross_section", [](HepMC3::GenEvent* a, HepMC3::GenCrossSectionPtr arg0)->void { a->set_cross_section(arg0); });

    DEBUG_MSG("Adding wrapper for const HepMC3::FourVector & HepMC3::GenEvent::event_pos() (" __HERE__ ")");
    // signature to use in the veto list: const HepMC3::FourVector & HepMC3::GenEvent::event_pos()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:195:23
    t.method("event_pos", [](HepMC3::GenEvent const& a)->const HepMC3::FourVector & { return a.event_pos(); });
    t.method("event_pos", [](HepMC3::GenEvent const* a)->const HepMC3::FourVector & { return a->event_pos(); });

    DEBUG_MSG("Adding wrapper for const std::vector<HepMC3::GenParticlePtr> & HepMC3::GenEvent::beams() (" __HERE__ ")");
    // signature to use in the veto list: const std::vector<HepMC3::GenParticlePtr> & HepMC3::GenEvent::beams()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:205:41
    t.method("beams", [](HepMC3::GenEvent& a)->const std::vector<HepMC3::GenParticlePtr> & { return a.beams(); });
    t.method("beams", [](HepMC3::GenEvent* a)->const std::vector<HepMC3::GenParticlePtr> & { return a->beams(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::shift_position_by(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::shift_position_by(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:208:10
    t.method("shift_position_by", [](HepMC3::GenEvent& a, const HepMC3::FourVector & arg0)->void { a.shift_position_by(arg0); });
    t.method("shift_position_by", [](HepMC3::GenEvent* a, const HepMC3::FourVector & arg0)->void { a->shift_position_by(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::shift_position_to(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::shift_position_to(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:211:10
    t.method("shift_position_to", [](HepMC3::GenEvent& a, const HepMC3::FourVector & arg0)->void { a.shift_position_to(arg0); });
    t.method("shift_position_to", [](HepMC3::GenEvent* a, const HepMC3::FourVector & arg0)->void { a->shift_position_to(arg0); });

    DEBUG_MSG("Adding wrapper for bool HepMC3::GenEvent::boost(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: bool HepMC3::GenEvent::boost(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:217:10
    t.method("boost", [](HepMC3::GenEvent& a, const HepMC3::FourVector & arg0)->bool { return a.boost(arg0); });
    t.method("boost", [](HepMC3::GenEvent* a, const HepMC3::FourVector & arg0)->bool { return a->boost(arg0); });

    DEBUG_MSG("Adding wrapper for bool HepMC3::GenEvent::rotate(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: bool HepMC3::GenEvent::rotate(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:219:10
    t.method("rotate", [](HepMC3::GenEvent& a, const HepMC3::FourVector & arg0)->bool { return a.rotate(arg0); });
    t.method("rotate", [](HepMC3::GenEvent* a, const HepMC3::FourVector & arg0)->bool { return a->rotate(arg0); });

    DEBUG_MSG("Adding wrapper for bool HepMC3::GenEvent::reflect(const int) (" __HERE__ ")");
    // signature to use in the veto list: bool HepMC3::GenEvent::reflect(const int)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:221:10
    t.method("reflect", [](HepMC3::GenEvent& a, const int arg0)->bool { return a.reflect(arg0); });
    t.method("reflect", [](HepMC3::GenEvent* a, const int arg0)->bool { return a->reflect(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::add_attribute(const std::string &, const std::shared_ptr<HepMC3::Attribute> &, const int &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::add_attribute(const std::string &, const std::shared_ptr<HepMC3::Attribute> &, const int &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:232:10
    t.method("add_attribute", [](HepMC3::GenEvent& a, const std::string & arg0, const std::shared_ptr<HepMC3::Attribute> & arg1)->void { a.add_attribute(arg0, arg1); });
    t.method("add_attribute", [](HepMC3::GenEvent& a, const std::string & arg0, const std::shared_ptr<HepMC3::Attribute> & arg1, const int & arg2)->void { a.add_attribute(arg0, arg1, arg2); });
    t.method("add_attribute", [](HepMC3::GenEvent* a, const std::string & arg0, const std::shared_ptr<HepMC3::Attribute> & arg1)->void { a->add_attribute(arg0, arg1); });
    t.method("add_attribute", [](HepMC3::GenEvent* a, const std::string & arg0, const std::shared_ptr<HepMC3::Attribute> & arg1, const int & arg2)->void { a->add_attribute(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::add_attributes(const std::vector<std::string> &, const std::vector<std::shared_ptr<HepMC3::Attribute>> &, const std::vector<int> &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::add_attributes(const std::vector<std::string> &, const std::vector<std::shared_ptr<HepMC3::Attribute>> &, const std::vector<int> &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:238:10
    t.method("add_attributes", [](HepMC3::GenEvent& a, const std::vector<std::string> & arg0, const std::vector<std::shared_ptr<HepMC3::Attribute>> & arg1, const std::vector<int> & arg2)->void { a.add_attributes(arg0, arg1, arg2); });
    t.method("add_attributes", [](HepMC3::GenEvent* a, const std::vector<std::string> & arg0, const std::vector<std::shared_ptr<HepMC3::Attribute>> & arg1, const std::vector<int> & arg2)->void { a->add_attributes(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::add_attributes(const std::string &, const std::vector<std::shared_ptr<HepMC3::Attribute>> &, const std::vector<int> &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::add_attributes(const std::string &, const std::vector<std::shared_ptr<HepMC3::Attribute>> &, const std::vector<int> &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:244:10
    t.method("add_attributes", [](HepMC3::GenEvent& a, const std::string & arg0, const std::vector<std::shared_ptr<HepMC3::Attribute>> & arg1, const std::vector<int> & arg2)->void { a.add_attributes(arg0, arg1, arg2); });
    t.method("add_attributes", [](HepMC3::GenEvent* a, const std::string & arg0, const std::vector<std::shared_ptr<HepMC3::Attribute>> & arg1, const std::vector<int> & arg2)->void { a->add_attributes(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::remove_attribute(const std::string &, const int &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::remove_attribute(const std::string &, const int &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:254:10
    t.method("remove_attribute", [](HepMC3::GenEvent& a, const std::string & arg0)->void { a.remove_attribute(arg0); });
    t.method("remove_attribute", [](HepMC3::GenEvent& a, const std::string & arg0, const int & arg1)->void { a.remove_attribute(arg0, arg1); });
    t.method("remove_attribute", [](HepMC3::GenEvent* a, const std::string & arg0)->void { a->remove_attribute(arg0); });
    t.method("remove_attribute", [](HepMC3::GenEvent* a, const std::string & arg0, const int & arg1)->void { a->remove_attribute(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for std::string HepMC3::GenEvent::attribute_as_string(const std::string &, const int &) (" __HERE__ ")");
    // signature to use in the veto list: std::string HepMC3::GenEvent::attribute_as_string(const std::string &, const int &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:261:17
    t.method("attribute_as_string", [](HepMC3::GenEvent const& a, const std::string & arg0)->std::string { return a.attribute_as_string(arg0); });
    t.method("attribute_as_string", [](HepMC3::GenEvent const& a, const std::string & arg0, const int & arg1)->std::string { return a.attribute_as_string(arg0, arg1); });
    t.method("attribute_as_string", [](HepMC3::GenEvent const* a, const std::string & arg0)->std::string { return a->attribute_as_string(arg0); });
    t.method("attribute_as_string", [](HepMC3::GenEvent const* a, const std::string & arg0, const int & arg1)->std::string { return a->attribute_as_string(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for std::vector<std::string> HepMC3::GenEvent::attribute_names(const int &) (" __HERE__ ")");
    // signature to use in the veto list: std::vector<std::string> HepMC3::GenEvent::attribute_names(const int &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:264:30
    t.method("attribute_names", [](HepMC3::GenEvent const& a)->std::vector<std::string> { return a.attribute_names(); });
    t.method("attribute_names", [](HepMC3::GenEvent const& a, const int & arg0)->std::vector<std::string> { return a.attribute_names(arg0); });
    t.method("attribute_names", [](HepMC3::GenEvent const* a)->std::vector<std::string> { return a->attribute_names(); });
    t.method("attribute_names", [](HepMC3::GenEvent const* a, const int & arg0)->std::vector<std::string> { return a->attribute_names(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::add_particle(HepMC3::GenParticlePtr) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::add_particle(HepMC3::GenParticlePtr)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:280:10
    t.method("add_particle", [](HepMC3::GenEvent& a, HepMC3::GenParticlePtr arg0)->void { a.add_particle(arg0); });
    t.method("add_particle", [](HepMC3::GenEvent* a, HepMC3::GenParticlePtr arg0)->void { a->add_particle(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::add_vertex(HepMC3::GenVertexPtr) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::add_vertex(HepMC3::GenVertexPtr)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:283:10
    t.method("add_vertex", [](HepMC3::GenEvent& a, HepMC3::GenVertexPtr arg0)->void { a.add_vertex(arg0); });
    t.method("add_vertex", [](HepMC3::GenEvent* a, HepMC3::GenVertexPtr arg0)->void { a->add_vertex(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::remove_particle(HepMC3::GenParticlePtr) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::remove_particle(HepMC3::GenParticlePtr)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:291:10
    t.method("remove_particle", [](HepMC3::GenEvent& a, HepMC3::GenParticlePtr arg0)->void { a.remove_particle(arg0); });
    t.method("remove_particle", [](HepMC3::GenEvent* a, HepMC3::GenParticlePtr arg0)->void { a->remove_particle(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::remove_particles(std::vector<HepMC3::GenParticlePtr>) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::remove_particles(std::vector<HepMC3::GenParticlePtr>)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:297:10
    t.method("remove_particles", [](HepMC3::GenEvent& a, std::vector<HepMC3::GenParticlePtr> arg0)->void { a.remove_particles(arg0); });
    t.method("remove_particles", [](HepMC3::GenEvent* a, std::vector<HepMC3::GenParticlePtr> arg0)->void { a->remove_particles(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::remove_vertex(HepMC3::GenVertexPtr) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::remove_vertex(HepMC3::GenVertexPtr)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:302:10
    t.method("remove_vertex", [](HepMC3::GenEvent& a, HepMC3::GenVertexPtr arg0)->void { a.remove_vertex(arg0); });
    t.method("remove_vertex", [](HepMC3::GenEvent* a, HepMC3::GenVertexPtr arg0)->void { a->remove_vertex(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::add_tree(const std::vector<HepMC3::GenParticlePtr> &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::add_tree(const std::vector<HepMC3::GenParticlePtr> &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:313:10
    t.method("add_tree", [](HepMC3::GenEvent& a, const std::vector<HepMC3::GenParticlePtr> & arg0)->void { a.add_tree(arg0); });
    t.method("add_tree", [](HepMC3::GenEvent* a, const std::vector<HepMC3::GenParticlePtr> & arg0)->void { a->add_tree(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::reserve(const size_t &, const size_t &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::reserve(const size_t &, const size_t &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:318:10
    t.method("reserve", [](HepMC3::GenEvent& a, const size_t & arg0)->void { a.reserve(arg0); });
    t.method("reserve", [](HepMC3::GenEvent& a, const size_t & arg0, const size_t & arg1)->void { a.reserve(arg0, arg1); });
    t.method("reserve", [](HepMC3::GenEvent* a, const size_t & arg0)->void { a->reserve(arg0); });
    t.method("reserve", [](HepMC3::GenEvent* a, const size_t & arg0, const size_t & arg1)->void { a->reserve(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::clear() (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::clear()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:321:10
    t.method("clear", [](HepMC3::GenEvent& a)->void { a.clear(); });
    t.method("clear", [](HepMC3::GenEvent* a)->void { a->clear(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::set_beam_particles(HepMC3::GenParticlePtr, HepMC3::GenParticlePtr) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::set_beam_particles(HepMC3::GenParticlePtr, HepMC3::GenParticlePtr)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:330:10
    t.method("set_beam_particles", [](HepMC3::GenEvent& a, HepMC3::GenParticlePtr arg0, HepMC3::GenParticlePtr arg1)->void { a.set_beam_particles(arg0, arg1); });
    t.method("set_beam_particles", [](HepMC3::GenEvent* a, HepMC3::GenParticlePtr arg0, HepMC3::GenParticlePtr arg1)->void { a->set_beam_particles(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::add_beam_particle(HepMC3::GenParticlePtr) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::add_beam_particle(HepMC3::GenParticlePtr)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:335:10
    t.method("add_beam_particle", [](HepMC3::GenEvent& a, HepMC3::GenParticlePtr arg0)->void { a.add_beam_particle(arg0); });
    t.method("add_beam_particle", [](HepMC3::GenEvent* a, HepMC3::GenParticlePtr arg0)->void { a->add_beam_particle(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::write_data(HepMC3::GenEventData &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::write_data(HepMC3::GenEventData &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:347:10
    t.method("write_data", [](HepMC3::GenEvent const& a, HepMC3::GenEventData & arg0)->void { a.write_data(arg0); });
    t.method("write_data", [](HepMC3::GenEvent const* a, HepMC3::GenEventData & arg0)->void { a->write_data(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::GenEvent::read_data(const HepMC3::GenEventData &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::GenEvent::read_data(const HepMC3::GenEventData &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/GenEvent.h:350:10
    t.method("read_data", [](HepMC3::GenEvent& a, const HepMC3::GenEventData & arg0)->void { a.read_data(arg0); });
    t.method("read_data", [](HepMC3::GenEvent* a, const HepMC3::GenEventData & arg0)->void { a->read_data(arg0); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<HepMC3::GenEvent>> type_;
};
std::shared_ptr<Wrapper> newJlHepMC3_GenEvent(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlHepMC3_GenEvent(module));
}
