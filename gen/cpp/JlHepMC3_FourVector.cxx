// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jlHepMC3.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<HepMC3::FourVector> : std::false_type { };
  template<> struct DefaultConstructible<HepMC3::FourVector> : std::false_type { };
}

// Class generating the wrapper for type HepMC3::FourVector
// signature to use in the veto file: HepMC3::FourVector
struct JlHepMC3_FourVector: public Wrapper {

  JlHepMC3_FourVector(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type HepMC3::FourVector (" __HERE__ ")");
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:36:7
    jlcxx::TypeWrapper<HepMC3::FourVector>  t = jlModule.add_type<HepMC3::FourVector>("HepMC3!FourVector");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<HepMC3::FourVector>>(new jlcxx::TypeWrapper<HepMC3::FourVector>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::FourVector(double, double, double, double) (" __HERE__ ")");
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:43:5
    t.constructor<double, double, double, double>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::FourVector(const HepMC3::FourVector &) (" __HERE__ ")");
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:46:5
    t.constructor<const HepMC3::FourVector &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for HepMC3::FourVector & HepMC3::FourVector::operator=(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::FourVector & HepMC3::FourVector::operator=(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:50:17
    t.method("assign", [](HepMC3::FourVector& a, const HepMC3::FourVector & arg0)->HepMC3::FourVector & { return a.operator=(arg0); });
    t.method("assign", [](HepMC3::FourVector* a, const HepMC3::FourVector & arg0)->HepMC3::FourVector & { return a->operator=(arg0); });


    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::set(double, double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::set(double, double, double, double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:58:10
    t.method("set", [](HepMC3::FourVector& a, double arg0, double arg1, double arg2, double arg3)->void { a.set(arg0, arg1, arg2, arg3); });
    t.method("set", [](HepMC3::FourVector* a, double arg0, double arg1, double arg2, double arg3)->void { a->set(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::set_component(const int, const double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::set_component(const int, const double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:66:10
    t.method("set_component", [](HepMC3::FourVector& a, const int arg0, const double arg1)->void { a.set_component(arg0, arg1); });
    t.method("set_component", [](HepMC3::FourVector* a, const int arg0, const double arg1)->void { a->set_component(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::get_component(const int) (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::get_component(const int)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:74:12
    t.method("get_component", [](HepMC3::FourVector const& a, const int arg0)->double { return a.get_component(arg0); });
    t.method("get_component", [](HepMC3::FourVector const* a, const int arg0)->double { return a->get_component(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::x() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::x()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:85:12
    t.method("x", [](HepMC3::FourVector const& a)->double { return a.x(); });
    t.method("x", [](HepMC3::FourVector const* a)->double { return a->x(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::set_x(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::set_x(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:87:10
    t.method("set_x", [](HepMC3::FourVector& a, double arg0)->void { a.set_x(arg0); });
    t.method("set_x", [](HepMC3::FourVector* a, double arg0)->void { a->set_x(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::setX(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::setX(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:89:10
    t.method("setX", [](HepMC3::FourVector& a, double arg0)->void { a.setX(arg0); });
    t.method("setX", [](HepMC3::FourVector* a, double arg0)->void { a->setX(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::y() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::y()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:92:12
    t.method("y", [](HepMC3::FourVector const& a)->double { return a.y(); });
    t.method("y", [](HepMC3::FourVector const* a)->double { return a->y(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::set_y(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::set_y(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:94:12
    t.method("set_y", [](HepMC3::FourVector& a, double arg0)->void { a.set_y(arg0); });
    t.method("set_y", [](HepMC3::FourVector* a, double arg0)->void { a->set_y(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::setY(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::setY(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:96:10
    t.method("setY", [](HepMC3::FourVector& a, double arg0)->void { a.setY(arg0); });
    t.method("setY", [](HepMC3::FourVector* a, double arg0)->void { a->setY(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::z() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::z()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:99:12
    t.method("z", [](HepMC3::FourVector const& a)->double { return a.z(); });
    t.method("z", [](HepMC3::FourVector const* a)->double { return a->z(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::set_z(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::set_z(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:101:10
    t.method("set_z", [](HepMC3::FourVector& a, double arg0)->void { a.set_z(arg0); });
    t.method("set_z", [](HepMC3::FourVector* a, double arg0)->void { a->set_z(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::setZ(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::setZ(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:103:10
    t.method("setZ", [](HepMC3::FourVector& a, double arg0)->void { a.setZ(arg0); });
    t.method("setZ", [](HepMC3::FourVector* a, double arg0)->void { a->setZ(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::t() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::t()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:106:12
    t.method("t", [](HepMC3::FourVector const& a)->double { return a.t(); });
    t.method("t", [](HepMC3::FourVector const* a)->double { return a->t(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::set_t(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::set_t(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:108:10
    t.method("set_t", [](HepMC3::FourVector& a, double arg0)->void { a.set_t(arg0); });
    t.method("set_t", [](HepMC3::FourVector* a, double arg0)->void { a->set_t(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::setT(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::setT(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:110:10
    t.method("setT", [](HepMC3::FourVector& a, double arg0)->void { a.setT(arg0); });
    t.method("setT", [](HepMC3::FourVector* a, double arg0)->void { a->setT(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::px() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::px()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:114:12
    t.method("px", [](HepMC3::FourVector const& a)->double { return a.px(); });
    t.method("px", [](HepMC3::FourVector const* a)->double { return a->px(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::set_px(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::set_px(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:116:10
    t.method("set_px", [](HepMC3::FourVector& a, double arg0)->void { a.set_px(arg0); });
    t.method("set_px", [](HepMC3::FourVector* a, double arg0)->void { a->set_px(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::setPx(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::setPx(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:118:10
    t.method("setPx", [](HepMC3::FourVector& a, double arg0)->void { a.setPx(arg0); });
    t.method("setPx", [](HepMC3::FourVector* a, double arg0)->void { a->setPx(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::py() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::py()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:121:12
    t.method("py", [](HepMC3::FourVector const& a)->double { return a.py(); });
    t.method("py", [](HepMC3::FourVector const* a)->double { return a->py(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::set_py(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::set_py(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:123:10
    t.method("set_py", [](HepMC3::FourVector& a, double arg0)->void { a.set_py(arg0); });
    t.method("set_py", [](HepMC3::FourVector* a, double arg0)->void { a->set_py(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::setPy(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::setPy(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:125:10
    t.method("setPy", [](HepMC3::FourVector& a, double arg0)->void { a.setPy(arg0); });
    t.method("setPy", [](HepMC3::FourVector* a, double arg0)->void { a->setPy(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::pz() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::pz()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:128:12
    t.method("pz", [](HepMC3::FourVector const& a)->double { return a.pz(); });
    t.method("pz", [](HepMC3::FourVector const* a)->double { return a->pz(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::set_pz(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::set_pz(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:130:10
    t.method("set_pz", [](HepMC3::FourVector& a, double arg0)->void { a.set_pz(arg0); });
    t.method("set_pz", [](HepMC3::FourVector* a, double arg0)->void { a->set_pz(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::setPz(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::setPz(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:132:10
    t.method("setPz", [](HepMC3::FourVector& a, double arg0)->void { a.setPz(arg0); });
    t.method("setPz", [](HepMC3::FourVector* a, double arg0)->void { a->setPz(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::e() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::e()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:135:12
    t.method("e", [](HepMC3::FourVector const& a)->double { return a.e(); });
    t.method("e", [](HepMC3::FourVector const* a)->double { return a->e(); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::set_e(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::set_e(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:137:10
    t.method("set_e", [](HepMC3::FourVector& a, double arg0)->void { a.set_e(arg0); });
    t.method("set_e", [](HepMC3::FourVector* a, double arg0)->void { a->set_e(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::setE(double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::setE(double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:139:10
    t.method("setE", [](HepMC3::FourVector& a, double arg0)->void { a.setE(arg0); });
    t.method("setE", [](HepMC3::FourVector* a, double arg0)->void { a->setE(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::length2() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::length2()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:148:12
    t.method("length2", [](HepMC3::FourVector const& a)->double { return a.length2(); });
    t.method("length2", [](HepMC3::FourVector const* a)->double { return a->length2(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::length() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::length()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:150:12
    t.method("length", [](HepMC3::FourVector const& a)->double { return a.length(); });
    t.method("length", [](HepMC3::FourVector const* a)->double { return a->length(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::rho() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::rho()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:152:12
    t.method("rho", [](HepMC3::FourVector const& a)->double { return a.rho(); });
    t.method("rho", [](HepMC3::FourVector const* a)->double { return a->rho(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::perp2() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::perp2()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:154:12
    t.method("perp2", [](HepMC3::FourVector const& a)->double { return a.perp2(); });
    t.method("perp2", [](HepMC3::FourVector const* a)->double { return a->perp2(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::perp() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::perp()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:156:12
    t.method("perp", [](HepMC3::FourVector const& a)->double { return a.perp(); });
    t.method("perp", [](HepMC3::FourVector const* a)->double { return a->perp(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::interval() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::interval()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:158:12
    t.method("interval", [](HepMC3::FourVector const& a)->double { return a.interval(); });
    t.method("interval", [](HepMC3::FourVector const* a)->double { return a->interval(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::p3mod2() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::p3mod2()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:161:12
    t.method("p3mod2", [](HepMC3::FourVector const& a)->double { return a.p3mod2(); });
    t.method("p3mod2", [](HepMC3::FourVector const* a)->double { return a->p3mod2(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::p3mod() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::p3mod()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:163:12
    t.method("p3mod", [](HepMC3::FourVector const& a)->double { return a.p3mod(); });
    t.method("p3mod", [](HepMC3::FourVector const* a)->double { return a->p3mod(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::pt2() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::pt2()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:165:12
    t.method("pt2", [](HepMC3::FourVector const& a)->double { return a.pt2(); });
    t.method("pt2", [](HepMC3::FourVector const* a)->double { return a->pt2(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::pt() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::pt()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:167:12
    t.method("pt", [](HepMC3::FourVector const& a)->double { return a.pt(); });
    t.method("pt", [](HepMC3::FourVector const* a)->double { return a->pt(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::m2() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::m2()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:169:12
    t.method("m2", [](HepMC3::FourVector const& a)->double { return a.m2(); });
    t.method("m2", [](HepMC3::FourVector const* a)->double { return a->m2(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::m() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::m()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:171:12
    t.method("m", [](HepMC3::FourVector const& a)->double { return a.m(); });
    t.method("m", [](HepMC3::FourVector const* a)->double { return a->m(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::phi() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::phi()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:174:12
    t.method("phi", [](HepMC3::FourVector const& a)->double { return a.phi(); });
    t.method("phi", [](HepMC3::FourVector const* a)->double { return a->phi(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::theta() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::theta()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:176:12
    t.method("theta", [](HepMC3::FourVector const& a)->double { return a.theta(); });
    t.method("theta", [](HepMC3::FourVector const* a)->double { return a->theta(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::eta() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::eta()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:178:12
    t.method("eta", [](HepMC3::FourVector const& a)->double { return a.eta(); });
    t.method("eta", [](HepMC3::FourVector const* a)->double { return a->eta(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::rap() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::rap()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:184:12
    t.method("rap", [](HepMC3::FourVector const& a)->double { return a.rap(); });
    t.method("rap", [](HepMC3::FourVector const* a)->double { return a->rap(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::abs_eta() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::abs_eta()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:190:12
    t.method("abs_eta", [](HepMC3::FourVector const& a)->double { return a.abs_eta(); });
    t.method("abs_eta", [](HepMC3::FourVector const* a)->double { return a->abs_eta(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::abs_rap() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::abs_rap()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:192:12
    t.method("abs_rap", [](HepMC3::FourVector const& a)->double { return a.abs_rap(); });
    t.method("abs_rap", [](HepMC3::FourVector const* a)->double { return a->abs_rap(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::pseudoRapidity() (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::pseudoRapidity()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:197:12
    t.method("pseudoRapidity", [](HepMC3::FourVector const& a)->double { return a.pseudoRapidity(); });
    t.method("pseudoRapidity", [](HepMC3::FourVector const* a)->double { return a->pseudoRapidity(); });

    DEBUG_MSG("Adding wrapper for bool HepMC3::FourVector::is_zero() (" __HERE__ ")");
    // signature to use in the veto list: bool HepMC3::FourVector::is_zero()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:206:10
    t.method("is_zero", [](HepMC3::FourVector const& a)->bool { return a.is_zero(); });
    t.method("is_zero", [](HepMC3::FourVector const* a)->bool { return a->is_zero(); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::delta_phi(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::delta_phi(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:209:12
    t.method("delta_phi", [](HepMC3::FourVector const& a, const HepMC3::FourVector & arg0)->double { return a.delta_phi(arg0); });
    t.method("delta_phi", [](HepMC3::FourVector const* a, const HepMC3::FourVector & arg0)->double { return a->delta_phi(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::delta_eta(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::delta_eta(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:218:12
    t.method("delta_eta", [](HepMC3::FourVector const& a, const HepMC3::FourVector & arg0)->double { return a.delta_eta(arg0); });
    t.method("delta_eta", [](HepMC3::FourVector const* a, const HepMC3::FourVector & arg0)->double { return a->delta_eta(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::delta_rap(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::delta_rap(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:221:12
    t.method("delta_rap", [](HepMC3::FourVector const& a, const HepMC3::FourVector & arg0)->double { return a.delta_rap(arg0); });
    t.method("delta_rap", [](HepMC3::FourVector const* a, const HepMC3::FourVector & arg0)->double { return a->delta_rap(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::delta_r2_eta(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::delta_r2_eta(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:224:12
    t.method("delta_r2_eta", [](HepMC3::FourVector const& a, const HepMC3::FourVector & arg0)->double { return a.delta_r2_eta(arg0); });
    t.method("delta_r2_eta", [](HepMC3::FourVector const* a, const HepMC3::FourVector & arg0)->double { return a->delta_r2_eta(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::delta_r_eta(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::delta_r_eta(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:229:12
    t.method("delta_r_eta", [](HepMC3::FourVector const& a, const HepMC3::FourVector & arg0)->double { return a.delta_r_eta(arg0); });
    t.method("delta_r_eta", [](HepMC3::FourVector const* a, const HepMC3::FourVector & arg0)->double { return a->delta_r_eta(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::delta_r2_rap(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::delta_r2_rap(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:234:12
    t.method("delta_r2_rap", [](HepMC3::FourVector const& a, const HepMC3::FourVector & arg0)->double { return a.delta_r2_rap(arg0); });
    t.method("delta_r2_rap", [](HepMC3::FourVector const* a, const HepMC3::FourVector & arg0)->double { return a->delta_r2_rap(arg0); });

    DEBUG_MSG("Adding wrapper for double HepMC3::FourVector::delta_r_rap(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: double HepMC3::FourVector::delta_r_rap(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:239:12
    t.method("delta_r_rap", [](HepMC3::FourVector const& a, const HepMC3::FourVector & arg0)->double { return a.delta_r_rap(arg0); });
    t.method("delta_r_rap", [](HepMC3::FourVector const* a, const HepMC3::FourVector & arg0)->double { return a->delta_r_rap(arg0); });
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for bool HepMC3::FourVector::operator==(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: bool HepMC3::FourVector::operator==(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:250:10
    t.method("==", [](HepMC3::FourVector const& a, const HepMC3::FourVector & arg0)->bool { return a.operator==(arg0); });
    t.method("==", [](HepMC3::FourVector const* a, const HepMC3::FourVector & arg0)->bool { return a->operator==(arg0); });

    DEBUG_MSG("Adding wrapper for bool HepMC3::FourVector::operator!=(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: bool HepMC3::FourVector::operator!=(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:254:10
    t.method("!=", [](HepMC3::FourVector const& a, const HepMC3::FourVector & arg0)->bool { return a.operator!=(arg0); });
    t.method("!=", [](HepMC3::FourVector const* a, const HepMC3::FourVector & arg0)->bool { return a->operator!=(arg0); });

    DEBUG_MSG("Adding wrapper for HepMC3::FourVector HepMC3::FourVector::operator+(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::FourVector HepMC3::FourVector::operator+(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:257:17
    t.method("+", [](HepMC3::FourVector const& a, const HepMC3::FourVector & arg0)->HepMC3::FourVector { return a.operator+(arg0); });
    t.method("+", [](HepMC3::FourVector const* a, const HepMC3::FourVector & arg0)->HepMC3::FourVector { return a->operator+(arg0); });

    DEBUG_MSG("Adding wrapper for HepMC3::FourVector HepMC3::FourVector::operator-(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::FourVector HepMC3::FourVector::operator-(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:261:17
    t.method("-", [](HepMC3::FourVector const& a, const HepMC3::FourVector & arg0)->HepMC3::FourVector { return a.operator-(arg0); });
    t.method("-", [](HepMC3::FourVector const* a, const HepMC3::FourVector & arg0)->HepMC3::FourVector { return a->operator-(arg0); });

    DEBUG_MSG("Adding wrapper for HepMC3::FourVector HepMC3::FourVector::operator*(const double) (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::FourVector HepMC3::FourVector::operator*(const double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:265:17
    t.method("*", [](HepMC3::FourVector const& a, const double arg0)->HepMC3::FourVector { return a.operator*(arg0); });
    t.method("*", [](HepMC3::FourVector const* a, const double arg0)->HepMC3::FourVector { return a->operator*(arg0); });

    DEBUG_MSG("Adding wrapper for HepMC3::FourVector HepMC3::FourVector::operator/(const double) (" __HERE__ ")");
    // signature to use in the veto list: HepMC3::FourVector HepMC3::FourVector::operator/(const double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:269:17
    t.method("/", [](HepMC3::FourVector const& a, const double arg0)->HepMC3::FourVector { return a.operator/(arg0); });
    t.method("/", [](HepMC3::FourVector const* a, const double arg0)->HepMC3::FourVector { return a->operator/(arg0); });

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::operator+=(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::operator+=(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:274:10
    t.method("add!", [](HepMC3::FourVector& a, const HepMC3::FourVector & arg0)->void { a.operator+=(arg0); });
    t.method("add!", [](HepMC3::FourVector* a, const HepMC3::FourVector & arg0)->void { a->operator+=(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::operator-=(const HepMC3::FourVector &) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::operator-=(const HepMC3::FourVector &)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:281:10
    t.method("sub!", [](HepMC3::FourVector& a, const HepMC3::FourVector & arg0)->void { a.operator-=(arg0); });
    t.method("sub!", [](HepMC3::FourVector* a, const HepMC3::FourVector & arg0)->void { a->operator-=(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::operator*=(const double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::operator*=(const double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:288:10
    t.method("mult!", [](HepMC3::FourVector& a, const double arg0)->void { a.operator*=(arg0); });
    t.method("mult!", [](HepMC3::FourVector* a, const double arg0)->void { a->operator*=(arg0); });

    DEBUG_MSG("Adding wrapper for void HepMC3::FourVector::operator/=(const double) (" __HERE__ ")");
    // signature to use in the veto list: void HepMC3::FourVector::operator/=(const double)
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:295:10
    t.method("fdiv!", [](HepMC3::FourVector& a, const double arg0)->void { a.operator/=(arg0); });
    t.method("fdiv!", [](HepMC3::FourVector* a, const double arg0)->void { a->operator/=(arg0); });

    DEBUG_MSG("Adding wrapper for const HepMC3::FourVector & HepMC3::FourVector::ZERO_VECTOR() (" __HERE__ ")");
    // signature to use in the veto list: const HepMC3::FourVector & HepMC3::FourVector::ZERO_VECTOR()
    // defined in /home/hurtbadly/.julia/artifacts/7594d64d7c28f9689b484bf4d09af6dbb8b5123c/include/HepMC3/FourVector.h:306:30
    module_.method("HepMC3!FourVector!ZERO_VECTOR", []()->const HepMC3::FourVector & { return HepMC3::FourVector::ZERO_VECTOR(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<HepMC3::FourVector>> type_;
};
std::shared_ptr<Wrapper> newJlHepMC3_FourVector(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlHepMC3_FourVector(module));
}
